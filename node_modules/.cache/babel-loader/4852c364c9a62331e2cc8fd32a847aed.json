{"ast":null,"code":"var _jsxFileName = \"/Users/ryanshirley/Documents/Local Development/hgv-app/src/components/CryptoCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Theme Context\n\nimport { ThemeContext } from \"../ThemeContext\"; // Components\n\nimport Button from './Button';\n\nclass CryptoCard extends React.Component {\n  constructor(props) {\n    super(props);\n    let currency = this.props.currency;\n\n    if (currency === 'EUR') {\n      currency = '€';\n    } else if (currency === 'USD') {\n      currency = '$';\n    } else if (currency === 'GPB') {\n      currency = '£';\n    }\n\n    this.state = {\n      name: this.props.coin.name + ' (' + this.props.coin.symbol + ')',\n      currency: currency,\n      price: this.props.coin.quote[this.props.currency].price.toFixed(2),\n      description: this.props.coin.metadata.description,\n      logo: this.props.coin.metadata.logo,\n      link: \"coin/\" + this.props.coin.slug\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props !== nextProps) {\n      this.setState({\n        currency: nextProps.currency,\n        price: nextProps.coin.quote[nextProps.currency].price.toFixed(2)\n      });\n    }\n  }\n\n  render() {\n    const themeStyle = this.context.style;\n    return React.createElement(\"div\", {\n      className: \"card crypto-card mb-4 \" + themeStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row align-items-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title mb-0 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.name)), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"price text-right mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"currency\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.currency), this.state.price))), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.description.substring(0, 170), \"...\")), React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.logo,\n      alt: this.state.name,\n      className: \"rounded-circle float-left mt-1\",\n      width: \"25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"float-left ml-3 mb-0 mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Read more about \", this.state.name), React.createElement(Button, {\n      text: \"More info\",\n      state: this.props.coin,\n      link: this.state.link,\n      style: \"dark\",\n      classes: \"btn-sm float-right text-uppercase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n}\n\nCryptoCard.contextType = ThemeContext;\nCryptoCard.propTypes = {\n  coin: PropTypes.object.isRequired\n};\nexport default CryptoCard;","map":{"version":3,"sources":["/Users/ryanshirley/Documents/Local Development/hgv-app/src/components/CryptoCard.js"],"names":["React","PropTypes","ThemeContext","Button","CryptoCard","Component","constructor","props","currency","state","name","coin","symbol","price","quote","toFixed","description","metadata","logo","link","slug","componentWillReceiveProps","nextProps","setState","render","themeStyle","context","style","substring","contextType","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,iBAA7B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,QAAIC,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA1B;;AACA,QAAGA,QAAQ,KAAK,KAAhB,EAAuB;AACnBA,MAAAA,QAAQ,GAAG,GAAX;AACH,KAFD,MAGK,IAAIA,QAAQ,KAAK,KAAjB,EAAwB;AACzBA,MAAAA,QAAQ,GAAG,GAAX;AACH,KAFI,MAGA,IAAIA,QAAQ,KAAK,KAAjB,EAAwB;AACzBA,MAAAA,QAAQ,GAAG,GAAX;AACH;;AAED,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IAAX,CAAgBD,IAAhB,GAAuB,IAAvB,GAA8B,KAAKH,KAAL,CAAWI,IAAX,CAAgBC,MAA9C,GAAuD,GADpD;AAETJ,MAAAA,QAAQ,EAAEA,QAFD;AAGTK,MAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,IAAX,CAAgBG,KAAhB,CAAsB,KAAKP,KAAL,CAAWC,QAAjC,EAA2CK,KAA3C,CAAiDE,OAAjD,CAAyD,CAAzD,CAHE;AAITC,MAAAA,WAAW,EAAE,KAAKT,KAAL,CAAWI,IAAX,CAAgBM,QAAhB,CAAyBD,WAJ7B;AAKTE,MAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWI,IAAX,CAAgBM,QAAhB,CAAyBC,IALtB;AAMTC,MAAAA,IAAI,EAAE,UAAU,KAAKZ,KAAL,CAAWI,IAAX,CAAgBS;AANvB,KAAb;AAQH;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAG,KAAKf,KAAL,KAAee,SAAlB,EAA6B;AACzB,WAAKC,QAAL,CAAc;AACVf,QAAAA,QAAQ,EAAEc,SAAS,CAACd,QADV;AAEVK,QAAAA,KAAK,EAAES,SAAS,CAACX,IAAV,CAAeG,KAAf,CAAqBQ,SAAS,CAACd,QAA/B,EAAyCK,KAAzC,CAA+CE,OAA/C,CAAuD,CAAvD;AAFG,OAAd;AAIH;AACJ;;AAIDS,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,KAAKC,OAAL,CAAaC,KAAhC;AAEA,WACI;AAAK,MAAA,SAAS,EAAE,2BAA2BF,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,KAAKhB,KAAL,CAAWC,IAAjD,CADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKD,KAAL,CAAWD,QAAvC,CAArC,EAA6F,KAAKC,KAAL,CAAWI,KAAxG,CADJ,CAJJ,CADJ,EAUI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKJ,KAAL,CAAWO,WAAX,CAAuBY,SAAvB,CAAiC,CAAjC,EAAoC,GAApC,CAA1B,QAVJ,CADJ,EAaI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE,KAAKnB,KAAL,CAAWS,IAArB;AAA2B,MAAA,GAAG,EAAE,KAAKT,KAAL,CAAWC,IAA3C;AAAiD,MAAA,SAAS,EAAC,gCAA3D;AAA4F,MAAA,KAAK,EAAC,IAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAG,MAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0D,KAAKD,KAAL,CAAWC,IAArE,CAFJ,EAGI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,WADT;AAEI,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,IAFtB;AAGI,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWU,IAHrB;AAII,MAAA,KAAK,EAAC,MAJV;AAKI,MAAA,OAAO,EAAC,mCALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAbJ,CADJ;AA2BH;;AAlEoC;;AAAnCf,U,CAkCKyB,W,GAAc3B,Y;AAmCzBE,UAAU,CAAC0B,SAAX,GAAuB;AACnBnB,EAAAA,IAAI,EAAEV,SAAS,CAAC8B,MAAV,CAAiBC;AADJ,CAAvB;AAIA,eAAe5B,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Theme Context\nimport { ThemeContext } from \"../ThemeContext\";\n\n// Components\nimport Button from './Button'\n\nclass CryptoCard extends React.Component {\n    constructor(props) {\n        super(props)\n\n        let currency = this.props.currency\n        if(currency === 'EUR') {\n            currency = '€'\n        }\n        else if (currency === 'USD') {\n            currency = '$'\n        }\n        else if (currency === 'GPB') {\n            currency = '£'\n        }\n\n        this.state = {\n            name: this.props.coin.name + ' (' + this.props.coin.symbol + ')',\n            currency: currency,\n            price: this.props.coin.quote[this.props.currency].price.toFixed(2),\n            description: this.props.coin.metadata.description,\n            logo: this.props.coin.metadata.logo,\n            link: \"coin/\" + this.props.coin.slug\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(this.props !== nextProps) {\n            this.setState({\n                currency: nextProps.currency,\n                price: nextProps.coin.quote[nextProps.currency].price.toFixed(2)\n            });\n        }\n    }\n\n    static contextType = ThemeContext;\n\n    render() {\n        const themeStyle = this.context.style;\n\n        return (\n            <div className={\"card crypto-card mb-4 \" + themeStyle}>\n                <div className=\"card-body\">\n                    <div className=\"row align-items-end\">\n                        <div className=\"col\">\n                            <h4 className=\"card-title mb-0 mt-3\">{this.state.name}</h4>\n                        </div>\n                        <div className=\"col\">\n                            <p className=\"price text-right mb-0\"><span className=\"currency\">{this.state.currency}</span>{this.state.price}</p>\n                        </div>\n                    </div>\n\n                    <p className=\"card-text\">{this.state.description.substring(0, 170)}...</p>\n                </div>\n                <div className=\"card-footer\">\n                    <img src={this.state.logo} alt={this.state.name} className=\"rounded-circle float-left mt-1\" width=\"25\" />\n                    <p className=\"float-left ml-3 mb-0 mt-1\">Read more about {this.state.name}</p>\n                    <Button\n                        text='More info'\n                        state={this.props.coin}\n                        link={this.state.link}\n                        style='dark'\n                        classes='btn-sm float-right text-uppercase'\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nCryptoCard.propTypes = {\n    coin: PropTypes.object.isRequired\n}      \n\nexport default CryptoCard"]},"metadata":{},"sourceType":"module"}